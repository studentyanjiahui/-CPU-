module ex_mem(
     input clk,rst,
     input [4:0]ex_addr,   //执行后的指令所在地址
     input wri_en,
     input [1:0] DM_out,
     input [11:2] dm_add,
     input [5:0] stall,
     input [31:0] wdata,
     output reg [4:0] mem_addr,
     output reg mem_wri,
     output reg [31:0] wridata,
     output reg [1:0] dm_out,
     output reg [11:2] memdm_add
    );
    
    always @(posedge clk) begin
        if(rst == 1) begin
            mem_addr <= 5'b0;
            mem_wri <= 1'b0;
            wridata <=32'b0;
            dm_out <= 0;
            memdm_add <= 10'bz;
         end
         else if(stall[3]==1 && stall[4]==0) begin
             mem_addr <= 5'b0;
             mem_wri <= 0;
             wridata <= 32'b0;
             dm_out <= DM_out;
             memdm_add <= 10'bz;
         end
        else
           mem_addr <= ex_addr;
           mem_wri <= wri_en;
           wridata <= wdata; 
           dm_out <= DM_out;
           memdm_add <= dm_add;
    end
endmodule
